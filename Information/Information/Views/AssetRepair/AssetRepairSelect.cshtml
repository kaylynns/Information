
@{
    Layout = null;
}

<!DOCTYPE html>
@*qq1417541933*@
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>资产报废停用维修申请</title>
    <link href="~/css/css.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/vue.js"></script>
    <style type="text/css">
        .t1 {
            clear: both;
            border: 1px solid #c9dae4;
            margin-top: 10px;
        }

            .t1 tr th {
                color: #0d487b;
                background: #f2f4f8 url(../CSS/Table/images/sj_title_pp.jpg) repeat-x left bottom;
                line-height: 28px;
                border-bottom: 1px solid #9cb6cf;
                border-top: 1px solid #e9edf3;
                font-weight: normal;
                text-shadow: #e6ecf3 1px 1px 0px;
                padding-left: 5px;
                padding-right: 5px;
            }

            .t1 tr td {
                border-bottom: 1px solid #e9e9e9;
                padding-bottom: 5px;
                padding-top: 5px;
                color: #444;
                border-top: 1px solid #FFFFFF;
                padding-left: 5px;
                padding-right: 5px;
                word-break: break-all;
            }
        /* white-space:nowrap; text-overflow:ellipsis; */
        tr.alt td {
            background: #ecf6fc; /*这行将给所有的tr加上背景色*/
        }

        tr.over td {
            background: #bcd4ec; /*这个将是鼠标高亮行的背景色*/
        }
    </style>
    <script type="text/javascript">
        $(document).ready(function () { //这个就是传说的ready
            $(".t1 tr").mouseover(function () {
                //如果鼠标移到class为stripe的表格的tr上时，执行函数
                $(this).addClass("over");
            }).mouseout(function () {
                //给这行添加class值为over，并且当鼠标一出该行时执行函数
                $(this).removeClass("over");
            }) //移除该行的class
            $(".t1 tr:even").addClass("alt");
            //给class为stripe的表格的偶数行添加class值为alt
        });
    </script>
    <script type="text/javascript">
        var pageSize = 1;
        var vm;
        var pages;
        var currentPage = 1;
        var vm;
        $(function () {
            //每个 Vue.js 应用的起步都是通过构造函数 Vue 创建一个 Vue 的根实例：
            vm = new Vue({
                el: "#zong",
                data: {    //每个 Vue 实例都会代理其 data 对象里所有的属性
                    nums: null
                }, methods: {
                    load: function (currPage) {
                        var t = this;
                        $.ajax({
                            url: "/AssetRepair/index2",
                            type: "Post",
                            data: "currentPage=" + currPage,
                            success: function (msg) {
                                var dt = eval("(" + msg + ")");
                                t.nums = dt["data"];
                                var dd= dt["data"];
                              
                                var rows = dt["rows"];
                                pages = dt["pages"];
                                $("#leftPage").text("共有" + rows + "条记录，当前第" + currentPage + "/" + pages + "页");
                              
                            }
                        })
                    }
                   
                }
            });
            //加载
            vm.load(currentPage);
            //首页
            $("#first").click(function () {
                currentPage = 1;
                vm.load(currentPage);
            })

            //上一页
            $("#prev").click(function () {
                if (currentPage > 1) {
                    currentPage--;
                }
                vm.load(currentPage);
            })

            //下一页
            $("#next").click(function () {
                if (currentPage < pages) {
                    currentPage++;
                }
                vm.load(currentPage);
                show("currentPage=" + currentPage);
            })
            //尾页
            $("#last").click(function () {
                currentPage = pages;
                vm.load(currentPage);
            })

           
           
        })
    </script>


</head>
<body>
    <div id="zong">
        <h2>资产维修报废申请</h2>

        <table  width="100%" id="ListArea" border="0" class="t1" align="center" cellpadding="0" cellspacing="0">
            <tr>
                <td>序号</td>
                <td>资产类别</td>
                <td>资产名称</td>
                <td>资产型号</td>
                <td>金额（元）</td>
                <td>购入时间</td>
                <td>资产状态</td>
                <td>详细参数</td>
                <td>审核状态</td>
                <td>操作</td>
            </tr>
            <tr v-for="(item,i) in nums">
                <td>{{item.AID}}</td>
                <td>{{item.ATypeId}}</td>
                <td>{{item.AName}}</td>
                <td>{{item.AModel}}</td>
                <td>{{item.AMoney}}</td>
                <td>{{item.ABuyTime}}</td>
                <td v-if="item.TID==='使用中'" :style="{color: '#6CE26C'}">{{item.TID}}</td>
                <td v-else-if="item.TID==='报废'" :style="{color: '#FFCC00'}">{{item.TID}}</td>
                <td v-else-if="item.TID==='维修'" :style="{color: 'red'}">{{item.TID}}</td>
                <td v-else="item.TID===''">{{item.TID}}</td>

                <td>{{item.AParameter}}</td>

                <td v-if="item.CRelustID==='审核通过'" :style="{color: '#6CE26C'}">{{item.CRelustID}}</td>
                <td v-else-if="item.CRelustID==='待审核'" :style="{color: '#FFCC00'}">{{item.CRelustID}}</td>
                <td v-else-if="item.CRelustID==='驳回'" :style="{color: 'red'}">{{item.CRelustID}}</td>
                <td v-else="item.CRelustID===''">{{item.CRelustID}}</td>

                
                <td v-if="item.TID!='使用中'" :style="{visibility: 'hidden'}"><a >操作</a></td>
                <td v-else="item.TID=='使用中'"><a v-bind:href="['/AssetRepair/AssetRepairEdit/'+item.AID]">操作</a></td>
            </tr>


        </table>
        <div id="pageDiv">
            <div id="leftPage"></div>
            <div id="rightPage">
                <input type="button" value="首页" OnClick="btn_select_Click" Class="btn1" id="first" />&nbsp;&nbsp;
                <input type="button" value="上一页" Class="btn1" id="prev" />&nbsp;&nbsp;
                <input type="button" value="下一页" Class="btn1" id="next" />&nbsp;&nbsp;
                <input type="button" value="尾页" Class="btn1" id="last" />&nbsp;&nbsp;
            </div>
        </div>

    </div>
   
</body>

</html>
